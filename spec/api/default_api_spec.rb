=begin
#Wheniwork

#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v2

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for WhenIWork::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = WhenIWork::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instact of DefaultApi' do
      expect(@instance).to be_instance_of(WhenIWork::DefaultApi)
    end
  end

  # unit tests for get_positions
  # 
  # This method allows you to get a list of all positions in your account.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :show_deleted Whether to show positions that have been deleted.
  # @return [PositionsResponse]
  describe 'get_positions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_shift
  # 
  # Gets the details of an existing shift.
  # @param shift_id max records to return
  # @param [Hash] opts the optional parameters
  # @return [ShiftResponse]
  describe 'get_shift test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_shifts
  # 
  # Get a list of shifts.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user_id The ID of the user to get shifts for. For multiple users, enter a list of user IDs separated by commas (e.g. 1,5,3).
  # @option opts [DateTime] :start Start time for the search window. The default is the current date and time
  # @option opts [DateTime] :_end End time for the search window. The default is exactly three days from the start time.
  # @option opts [String] :location_id The ID of the location to get shifts for. For multiple locations, enter a list of location IDs separated by commas.
  # @option opts [String] :position_id The ID of the position to get shifts for. For multiple position, enter a list of position IDs separated by commas.
  # @option opts [BOOLEAN] :include_open Whether to include OpenShifts in the results.
  # @option opts [BOOLEAN] :include_onlyopen Whether to include OpenShifts in the results.
  # @option opts [BOOLEAN] :unpublished Whether unpublished shifts should be included in the results.
  # @return [ShiftsResponse]
  describe 'get_shifts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_times
  # 
  # Get a list of times
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user_id The ID of the user to get shifts for. For multiple users, enter a list of user IDs separated by commas (e.g. 1,5,3).
  # @option opts [DateTime] :start Start time for the search window. The default is the current date and time
  # @option opts [DateTime] :_end End time for the search window. The default is exactly three days from the start time.
  # @return [TimesResponse]
  describe 'get_times test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # 
  # Get a specific user by their ID.
  # @param user_id The user identifier number
  # @param [Hash] opts the optional parameters
  # @return [UserResponse]
  describe 'get_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users
  # 
  # Get a list of users.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ids The IDs of the users to retrieve, as a comma-separated list (e.g. 9,17,42).
  # @option opts [String] :location_id The ID of the location to get users for. For multiple locations, enter a list of location IDs separated by commas.
  # @option opts [BOOLEAN] :show_deleted Whether to include deleted users in the results. Defaults to false.
  # @return [UsersResponse]
  describe 'get_users test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
