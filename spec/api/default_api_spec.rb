=begin
#WhenIWork

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for WhenIWork::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = WhenIWork::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(WhenIWork::DefaultApi)
    end
  end

  # unit tests for payrolls_get
  # This method allows you to list payroll periods or find ones within a specified date range.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start 
  # @option opts [DateTime] :_end 
  # @return [PayrollsResponse]
  describe 'payrolls_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for positions_get
  # This method allows you to get a list of all positions in your account.
  # @param [Hash] opts the optional parameters
  # @return [PositionResponse]
  describe 'positions_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for shifts_get
  # all shifts
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :user_id The ID of the user to get shifts for. For multiple users, enter a list of user IDs separated by commas (e.g. 1,5,3)
  # @option opts [String] :start 
  # @option opts [DateTime] :_end 
  # @return [ShiftsResponse]
  describe 'shifts_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for shifts_shift_id_get
  # Find a shift by id
  # @param shift_id ID of shift to return
  # @param [Hash] opts the optional parameters
  # @return [Shift]
  describe 'shifts_shift_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for times_get
  # get times
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :user_id The ID of the user to get times for. For multiple users, enter a list of user IDs separated by commas (e.g. 1,5,3)
  # @option opts [String] :start 
  # @option opts [DateTime] :_end 
  # @return [TimesResponse]
  describe 'times_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_user_id_get
  # get user
  # @param user_id ID of shift to return
  # @param [Hash] opts the optional parameters
  # @return [UserResponse]
  describe 'users_user_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
